#pragma once
#include "../../utils/storage.cuh"

namespace PARAMS_BLS12_377 {
  struct fp_config {
    static constexpr unsigned limbs_count = 8;
    static constexpr unsigned omegas_count = 32;
    static constexpr unsigned modulus_bit_count = 253;

    static constexpr storage<limbs_count> modulus = {0x00000001, 0x0a118000, 0xd0000001, 0x59aa76fe,
                                                     0x5c37b001, 0x60b44d1e, 0x9a2ca556, 0x12ab655e};
    static constexpr storage<limbs_count> modulus_2 = {0x00000002, 0x14230000, 0xa0000002, 0xb354edfd,
                                                       0xb86f6002, 0xc1689a3c, 0x34594aac, 0x2556cabd};
    static constexpr storage<limbs_count> modulus_4 = {0x00000004, 0x28460000, 0x40000004, 0x66a9dbfb,
                                                       0x70dec005, 0x82d13479, 0x68b29559, 0x4aad957a};
    static constexpr storage<2 * limbs_count> modulus_wide = {
      0x00000001, 0x0a118000, 0xd0000001, 0x59aa76fe, 0x5c37b001, 0x60b44d1e, 0x9a2ca556, 0x12ab655e,
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<2 * limbs_count> modulus_squared = {
      0x00000001, 0x14230000, 0xe0000002, 0xc7dd4d2f, 0x8585d003, 0x08ee1bd4, 0xe57fc56e, 0x7e7557e3,
      0x483a709d, 0x1fdebb41, 0x5678f4e6, 0x8ea77334, 0xc19c3ec5, 0xd717de29, 0xe2340781, 0x015c8d01};
    static constexpr storage<2 * limbs_count> modulus_squared_2 = {
      0x00000002, 0x28460000, 0xc0000004, 0x8fba9a5f, 0x0b0ba007, 0x11dc37a9, 0xcaff8adc, 0xfceaafc7,
      0x9074e13a, 0x3fbd7682, 0xacf1e9cc, 0x1d4ee668, 0x83387d8b, 0xae2fbc53, 0xc4680f03, 0x02b91a03};
    static constexpr storage<2 * limbs_count> modulus_squared_4 = {
      0x00000004, 0x508c0000, 0x80000008, 0x1f7534bf, 0x1617400f, 0x23b86f52, 0x95ff15b8, 0xf9d55f8f,
      0x20e9c275, 0x7f7aed05, 0x59e3d398, 0x3a9dccd1, 0x0670fb16, 0x5c5f78a7, 0x88d01e07, 0x05723407};

    static constexpr storage<limbs_count> m = {0x151e79ea, 0xf5204c21, 0x8d69e258, 0xfd0a180b,
                                               0xfaa80548, 0xe4e51e49, 0xc40b2c9e, 0x36d9491e};
    static constexpr storage<limbs_count> one = {0x00000001, 0x00000000, 0x00000000, 0x00000000,
                                                 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<limbs_count> zero = {0x00000000, 0x00000000, 0x00000000, 0x00000000,
                                                  0x00000000, 0x00000000, 0x00000000, 0x00000000};

    static constexpr storage<limbs_count> montgomery_r = {0xfffffff3, 0x7d1c7fff, 0x6ffffff2, 0x7257f50f,
                                                          0x512c0fee, 0x16d81575, 0x2bbb9a9d, 0x0d4bda32};
    static constexpr storage<limbs_count> montgomery_r_inv = {0x1beeec02, 0x4122dd1a, 0x74fee875, 0xbd1eae95,
                                                              0x27b28e2f, 0x838557e2, 0x2290c02c, 0x07b30191};

    static constexpr storage_array<omegas_count, limbs_count> omega = {
      {{0xd6c3c7aa, 0xee004250, 0x72c5f180, 0xf21b2bfd, 0xfa2dc1bc, 0x3153e026, 0xc4812317, 0x108f626e},
       {0xbeb0ae4e, 0xbaa712ed, 0xef27006d, 0x42eef7c9, 0xea6b679f, 0x10ad8558, 0x619ef2ad, 0x04b70c22},
       {0xd15cecef, 0x6f3f6064, 0x34f76a6e, 0x19b55c7f, 0x97f97e7a, 0x28a5a2c3, 0xa95da375, 0x0940cb6e},
       {0x39687af2, 0xa6353037, 0x0031f636, 0xfa0860f7, 0x98826483, 0xc497c7b8, 0xc78c1827, 0x0d97bcf2},
       {0x87a23189, 0xafaae005, 0xcfbef89a, 0x9cbb413d, 0xf0dd02ae, 0x66b9a01b, 0x4054a5ea, 0x09b199a7},
       {0xa0039978, 0x46f9f57f, 0x8783e97c, 0x9bf3847b, 0xbecd1d34, 0x4aa5e6e7, 0x6d714989, 0x053cf4da},
       {0xe9476b39, 0xccd35916, 0x60f53d03, 0x4064c08c, 0x36838e71, 0xbc11366b, 0xf2e19868, 0x0041ce5e},
       {0x4b3cfcf2, 0x2c2338ff, 0x5d4c3976, 0x8964ac09, 0x554d5abf, 0x54ee7ccd, 0x615cb9af, 0x119ec2fc},
       {0x2d56daf3, 0x9b9a6799, 0x7c23ce3e, 0x7d186f5f, 0xeda3d934, 0xd3d83a45, 0x0918fe6a, 0x02e248a3},
       {0x3fd00d3e, 0x4b093e69, 0x02b7506c, 0x20b4f921, 0x3f312fc7, 0xf1900dc5, 0x8c5153d7, 0x0ef0f032},
       {0x1eed2879, 0xb92be5bf, 0x04ea7811, 0xb53fb991, 0xc185a623, 0x6b23a4d5, 0xf2364347, 0x0eb7801f},
       {0x513e2842, 0x2f9a3c53, 0x43d607d8, 0xe9d79177, 0x80f7b957, 0xc03bd93b, 0xa207e380, 0x0b5deec6},
       {0x91b0d99a, 0xef425fb9, 0x9c54a6c8, 0xc888a768, 0x1c8b5c4c, 0xfa96bc92, 0xdda27907, 0x09891f12},
       {0x33f321bb, 0xc7f6467e, 0xa729dd8c, 0x3c0961fb, 0x463f22ea, 0x3ad12a20, 0x1990a6c3, 0x104ef73d},
       {0x85d66d18, 0x071e47fc, 0x9a89f5d8, 0xa9a0ed54, 0xef7cf40e, 0x6348e3c3, 0x3607b437, 0x0b86b438},
       {0x5024c301, 0xe373a05e, 0x9f4bac9d, 0x090dda14, 0xe95d0978, 0x424bd9f6, 0xc93b443d, 0x01f62bcc},
       {0x621a81d4, 0x2b0fe636, 0x2c0a7aeb, 0x4ebd3b71, 0xab41b3f2, 0xc84fe235, 0x9d0511e5, 0x0772d2ea},
       {0xe259e1d2, 0xce7703a5, 0xce807ddf, 0x87233a1b, 0xdf92788f, 0xbece514a, 0x209150ae, 0x0725eb58},
       {0x81c6b41b, 0xa8559499, 0x9e43d3d2, 0x7a19460b, 0xe0ab1c5d, 0x692e1d7e, 0x2639c020, 0x0fafe4e0},
       {0x80e276f3, 0x76bc4ffd, 0x501cf604, 0xba7ac9f0, 0x9ba3e6d1, 0x6aa29301, 0x38443055, 0x00cee7a3},
       {0xde2a7d1d, 0xcf3297ef, 0x82a8dd2d, 0xad190b76, 0x5a066a1b, 0x29a73a4b, 0x596db40f, 0x0960c197},
       {0x243bd595, 0x57d42101, 0x826d4d13, 0x0fbdcd3e, 0x6e01c24f, 0x42dab1ad, 0xf4cf651e, 0x0f0a0a65},
       {0x3e999529, 0x15caba56, 0x8c1eff49, 0xd758726e, 0x06bc6827, 0x65c59ada, 0xa2463216, 0x059a5198},
       {0xb32fc235, 0x3632ef8a, 0x3c1b7ada, 0x00d0f4f1, 0xf99aa8c8, 0xe00bc26e, 0x2a653952, 0x0e1e319f},
       {0x1c09ce24, 0xb15fbc12, 0xbb301075, 0xabfea08f, 0x53e78b26, 0x6f335f7e, 0xc2be4401, 0x0ad4e031},
       {0xe338aba4, 0x52c419a5, 0x9decbdaa, 0x2ff25280, 0xa9e58c7a, 0x213dffe3, 0xe839fc5d, 0x0c4e4d46},
       {0xf66c0179, 0x45555fc6, 0x151fce3b, 0xf0a13fe3, 0x1aa8d420, 0x7707e3f7, 0x348433f9, 0x0c4a9401},
       {0x87ec3538, 0x0b397c26, 0x30e45bc5, 0xed89bd08, 0x01e9e234, 0xf9dfcd7b, 0x600b4a8d, 0x036846ac},
       {0x9830c43b, 0x1a42245f, 0x732cdd12, 0x46358723, 0xb340494d, 0x90a43d3c, 0xecc23eac, 0x030f10c9},
       {0xb4bb0411, 0xd49a55fa, 0xced86f4b, 0x183d71c8, 0x2b56fb44, 0x4adf0ffa, 0xefd6d6a6, 0x0848434b},
       {0x44c46b48, 0x37573535, 0xaef16ced, 0x83868a80, 0x2d642623, 0x7b0a7203, 0xbb101920, 0x0bab4bd2},
       {0x39381fb2, 0x3c3d3ca7, 0xec99772b, 0x9a14cda3, 0x59724826, 0xd7aacc7c, 0xc5cc349c, 0x0d1ba211}}};

    static constexpr storage_array<omegas_count, limbs_count> omega_inv = {
      {{0xaef70610, 0x0dc2c774, 0xd7a4ee56, 0x01d65b71, 0x8a0220b9, 0x13f22e71, 0x906fb6b4, 0x04e49907},
       {0x95718f19, 0x1d6d2494, 0x79a5f66d, 0xb7c71349, 0xcdf3232a, 0xe4afdede, 0x9a443de0, 0x0609a1ea},
       {0xb2f794c1, 0x6b683ba7, 0x6df78b29, 0x14f5eeca, 0xde29c507, 0xe0442cd3, 0x59311d75, 0x0ebc02f6},
       {0x6815d6ab, 0x25b88815, 0x2d9edb15, 0x4611dc68, 0x99e8934c, 0x4e86ece9, 0x95c97f7d, 0x0eca08e6},
       {0x4c8aa1ee, 0x3b1bc7ec, 0xf4029994, 0xf0e97780, 0xe9a0990b, 0x9fe881f3, 0xac9756d6, 0x0657b826},
       {0x484b81aa, 0xd8770888, 0xac73215c, 0x9ec5d119, 0xd3367e5c, 0xd6c95979, 0xb86b58b2, 0x0cfcb9af},
       {0xe411d7aa, 0xd7abb193, 0xc6445afd, 0xc42d5abc, 0x68a3db7e, 0xefc10a88, 0x85ad60ad, 0x01ce6017},
       {0x025a865d, 0xe2e96753, 0xd9ad28b6, 0x2721a6df, 0x5eaa02cb, 0x9a5f6893, 0x44730a6a, 0x0d871872},
       {0x9217e57c, 0x377b1d74, 0xa91ed7d2, 0x1d52ffb8, 0xd58644eb, 0xe7ec9f86, 0xd3ce2b94, 0x0fadb09b},
       {0xc49c7403, 0x0ff5c709, 0x06aead1f, 0x3c93ec72, 0xa935a3a1, 0xfd9dafcc, 0xaf54266c, 0x08cf3c54},
       {0x3b376137, 0xc4827121, 0x6772a219, 0x54a20646, 0xadaeb582, 0x31d91182, 0x9ad77494, 0x0d0986b4},
       {0xdc91926b, 0x0fcfed55, 0x4a0b62b3, 0xab85374d, 0x940166c9, 0xda4ca185, 0x347fa037, 0x074ee8b6},
       {0x9d22de16, 0xd7d3a2d3, 0x9876d8bc, 0x2e9000e9, 0x1ce5f57c, 0xa74cec57, 0x6a0c8bc7, 0x0e9ec460},
       {0x7f3bd772, 0x512f9dd1, 0x51904c1b, 0x0f71bc10, 0xdf272a94, 0xec6f6d93, 0xa118c4c4, 0x053fd727},
       {0x91641114, 0xfeb5efa9, 0x80ac54f1, 0x9bc34550, 0xde4daa2a, 0x5b996f62, 0xc551864c, 0x040d9550},
       {0x910f1199, 0x2de58278, 0x7501e542, 0x0ae109fa, 0x8b69908c, 0xe9f0a666, 0x3e538ff0, 0x0a91216a},
       {0x05aaf7e6, 0x49be544c, 0x287b2b2e, 0xe7fead4f, 0xd6ed2d4f, 0x8daaf4d1, 0x8d9a7a07, 0x10f82c68},
       {0xcd6a2fde, 0x32b40a21, 0x88c9cbb3, 0x1ea4e2b0, 0xf9edfa52, 0x4d1d30d6, 0x0692a5a1, 0x113704fc},
       {0xa2803c82, 0xe713ce97, 0xf28e9310, 0x2c4f601a, 0x904dd1b8, 0x512ddfef, 0x1ad49b61, 0x076f8655},
       {0x20f75079, 0xe93e3483, 0xa9b7ee92, 0x836d2535, 0x7adebfc4, 0xbfe24d30, 0xdda4b0ae, 0x1283cc5c},
       {0x319a4cad, 0x92f8329c, 0xd0426ce5, 0x0b17b430, 0x5d82e003, 0x1f603cfe, 0x47fa8185, 0x069ef7c7},
       {0x632c787d, 0x2f4b1174, 0x2766bbd8, 0xa57d576f, 0x234fc4a5, 0xbe56a782, 0x09a18f5f, 0x10a6af34},
       {0x965cc309, 0x8e12965a, 0xf4391787, 0xd969c7fb, 0x815595ab, 0x81738ea8, 0x5f843276, 0x0600fcc9},
       {0xf2e21267, 0x915b50ce, 0xb1d98a5d, 0xb1f6095a, 0xad4a3921, 0x23bebc35, 0x054ed706, 0x042af102},
       {0x6f28f133, 0x59cf73e9, 0x11b963a6, 0x478c6599, 0x7a531185, 0x9668e825, 0x16ed8c49, 0x035a5ef7},
       {0xf45a2ac5, 0xd993464a, 0xff6784e9, 0x176c072b, 0x636556c1, 0x0ecfc3b9, 0xe8f091cf, 0x0cd7a919},
       {0x6ae5905c, 0xf1e43b48, 0xd2e5ae94, 0xd893e9dd, 0x44298da7, 0x66e2c063, 0x65cd8c15, 0x039dc9f8},
       {0x7e2edcd4, 0xcc7b0fd9, 0x152f4bb5, 0xe0389fb2, 0x521db958, 0x1c48925c, 0xc76ee337, 0x06851417},
       {0x031ca44c, 0xed4ffecc, 0x265386db, 0x595ad396, 0x13508077, 0x1f225afb, 0x6418a2fc, 0x05eebb00},
       {0x04425087, 0x3f5f732c, 0x457ffae6, 0xfe20eebc, 0x5beb91ea, 0x4e7190d3, 0x754f936e, 0x08b7d5b8},
       {0x8eeaad80, 0x009adf65, 0x0c1bc09c, 0x50d364d5, 0x50c18c29, 0xfa536627, 0x220c9358, 0x09363979},
       {0xef9e9d86, 0xa6a1bb05, 0x221f4317, 0x22deedcd, 0x3e6b43d4, 0x00256522, 0x508b191c, 0x10b31b83}}};

    static constexpr storage_array<omegas_count, limbs_count> inv = {
      {{0x00000001, 0x8508c000, 0x68000000, 0xacd53b7f, 0x2e1bd800, 0x305a268f, 0x4d1652ab, 0x0955b2af},
       {0x00000001, 0xc78d2000, 0x1c000000, 0x033fd93f, 0xc529c401, 0xc88739d6, 0xf3a17c00, 0x0e008c06},
       {0x00000001, 0xe8cf5000, 0xf6000000, 0x2e75281e, 0x90b0ba01, 0x949dc37a, 0xc6e710ab, 0x1055f8b2},
       {0x00000001, 0xf9706800, 0xe3000000, 0x440fcf8e, 0x76743501, 0xfaa9084c, 0xb089db00, 0x1180af08},
       {0x00000001, 0x01c0f400, 0xd9800001, 0x4edd2346, 0x6955f281, 0xadaeaab5, 0xa55b402b, 0x12160a33},
       {0x00000001, 0x05e93a00, 0xd4c00001, 0x5443cd22, 0xe2c6d141, 0x07317be9, 0x1fc3f2c1, 0x1260b7c9},
       {0x00000001, 0x07fd5d00, 0xd2600001, 0x56f72210, 0x1f7f40a1, 0xb3f2e484, 0xdcf84c0b, 0x12860e93},
       {0x00000001, 0x09076e80, 0xd1300001, 0x5850cc87, 0x3ddb7851, 0x0a5398d1, 0x3b9278b1, 0x1298b9f9},
       {0x00000001, 0x098c7740, 0x50980001, 0x58fda1c3, 0xcd099429, 0xb583f2f7, 0xeadf8f03, 0x12a20fab},
       {0x00000001, 0x09cefba0, 0x104c0001, 0x59540c61, 0x14a0a215, 0x0b1c200b, 0x42861a2d, 0x12a6ba85},
       {0x00000001, 0x09f03dd0, 0xf0260001, 0x597f41af, 0xb86c290b, 0xb5e83694, 0xee595fc1, 0x12a90ff1},
       {0x00000001, 0x0a00dee8, 0x60130001, 0x5994dc57, 0x8a51ec86, 0x0b4e41d9, 0x4443028c, 0x12aa3aa8},
       {0x00000001, 0x0a092f74, 0x18098001, 0xd99fa9ab, 0xf344ce43, 0x3601477b, 0x6f37d3f1, 0x12aad003},
       {0x00000001, 0x0a0d57ba, 0xf404c001, 0x99a51054, 0x27be3f22, 0xcb5aca4d, 0x04b23ca3, 0x12ab1ab1},
       {0x00000001, 0x0a0f6bdd, 0xe2026001, 0xf9a7c3a9, 0xc1faf791, 0x16078bb5, 0xcf6f70fd, 0x12ab4007},
       {0x80000001, 0x0a1075ee, 0x59013001, 0xa9a91d54, 0x0f1953c9, 0xbb5dec6a, 0x34ce0b29, 0x12ab52b3},
       {0x40000001, 0x0a10faf7, 0x94809801, 0x81a9ca29, 0x35a881e5, 0x0e091cc4, 0xe77d5840, 0x12ab5c08},
       {0xa0000001, 0x0a113d7b, 0x32404c01, 0x6daa2094, 0x48f018f3, 0x375eb4f1, 0xc0d4fecb, 0x12ab60b3},
       {0xd0000001, 0x0a115ebd, 0x81202601, 0x63aa4bc9, 0xd293e47a, 0xcc098107, 0x2d80d210, 0x12ab6309},
       {0xe8000001, 0x0a116f5e, 0x28901301, 0xdeaa6164, 0x1765ca3d, 0x965ee713, 0xe3d6bbb3, 0x12ab6433},
       {0x74000001, 0x0a1177af, 0x7c480981, 0x9c2a6c31, 0xb9cebd1f, 0xfb899a18, 0x3f01b084, 0x12ab64c9},
       {0xba000001, 0x0a117bd7, 0x262404c1, 0x7aea7198, 0x8b033690, 0xae1ef39b, 0xec972aed, 0x12ab6513},
       {0xdd000001, 0x0a117deb, 0x7b120261, 0xea4a744b, 0xf39d7348, 0x0769a05c, 0x4361e822, 0x12ab6539},
       {0xee800001, 0x0a117ef5, 0x25890131, 0x21fa75a5, 0xa7ea91a5, 0x340ef6bd, 0xeec746bc, 0x12ab654b},
       {0xf7400001, 0x0a117f7a, 0xfac48099, 0x3dd27651, 0x021120d3, 0x4a61a1ee, 0x4479f609, 0x12ab6555},
       {0x7ba00001, 0x0a117fbd, 0x6562404d, 0x4bbe76a8, 0x2f24686a, 0xd58af786, 0xef534daf, 0x12ab6559},
       {0xbdd00001, 0x0a117fde, 0x9ab12027, 0xd2b476d3, 0x45ae0c35, 0x1b1fa252, 0x44bff983, 0x12ab655c},
       {0x5ee80001, 0x0a117fef, 0x35589014, 0x962f76e9, 0x50f2de1b, 0xbde9f7b8, 0x6f764f6c, 0x12ab655d},
       {0xaf740001, 0x8a117ff7, 0x02ac480a, 0x77ecf6f4, 0x5695470e, 0x8f4f226b, 0x04d17a61, 0x12ab655e},
       {0xd7ba0001, 0xca117ffb, 0x69562405, 0xe8cbb6f9, 0xd9667b87, 0xf801b7c4, 0x4f7f0fdb, 0x12ab655e},
       {0xebdd0001, 0x6a117ffd, 0x1cab1203, 0xa13b16fc, 0x9acf15c4, 0x2c5b0271, 0x74d5da99, 0x12ab655e},
       {0xf5ee8001, 0x3a117ffe, 0x76558902, 0xfd72c6fd, 0xfb8362e2, 0xc687a7c7, 0x87813ff7, 0x12ab655e}}};
  };

  struct fq_config {
    static constexpr unsigned limbs_count = 12;
    static constexpr unsigned modulus_bit_count = 377;

    static constexpr storage<limbs_count> modulus = {0x00000001, 0x8508c000, 0x30000000, 0x170b5d44,
                                                     0xba094800, 0x1ef3622f, 0x00f5138f, 0x1a22d9f3,
                                                     0x6ca1493b, 0xc63b05c0, 0x17c510ea, 0x01ae3a46};
    static constexpr storage<limbs_count> modulus_2 = {0x00000002, 0x0a118000, 0x60000001, 0x2e16ba88,
                                                       0x74129000, 0x3de6c45f, 0x01ea271e, 0x3445b3e6,
                                                       0xd9429276, 0x8c760b80, 0x2f8a21d5, 0x035c748c};
    static constexpr storage<limbs_count> modulus_4 = {0x00000004, 0x14230000, 0xc0000002, 0x5c2d7510,
                                                       0xe8252000, 0x7bcd88be, 0x03d44e3c, 0x688b67cc,
                                                       0xb28524ec, 0x18ec1701, 0x5f1443ab, 0x06b8e918};
    static constexpr storage<2 * limbs_count> modulus_wide = {
      0x00000001, 0x8508c000, 0x30000000, 0x170b5d44, 0xba094800, 0x1ef3622f, 0x00f5138f, 0x1a22d9f3,
      0x6ca1493b, 0xc63b05c0, 0x17c510ea, 0x01ae3a46, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
      0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<2 * limbs_count> modulus_squared = {
      0x00000001, 0x0a118000, 0xf0000001, 0x7338d254, 0x2e1bd800, 0x4ada268f, 0x35f1c09a, 0x6bcbfbd2,
      0x58638c9d, 0x318324b9, 0x8bb70ae0, 0x460aaaaa, 0x502a4d6c, 0xc014e712, 0xb90660cd, 0x09d018af,
      0x3dda4d5c, 0x1f5e7141, 0xa4aee93f, 0x4bb8b87d, 0xb361263c, 0x2256913b, 0xd0bbaffb, 0x0002d307};
    static constexpr storage<2 * limbs_count> modulus_squared_2 = {
      0x00000002, 0x14230000, 0xe0000002, 0xe671a4a9, 0x5c37b000, 0x95b44d1e, 0x6be38134, 0xd797f7a4,
      0xb0c7193a, 0x63064972, 0x176e15c0, 0x8c155555, 0xa0549ad8, 0x8029ce24, 0x720cc19b, 0x13a0315f,
      0x7bb49ab8, 0x3ebce282, 0x495dd27e, 0x977170fb, 0x66c24c78, 0x44ad2277, 0xa1775ff6, 0x0005a60f};
    static constexpr storage<2 * limbs_count> modulus_squared_4 = {
      0x00000004, 0x28460000, 0xc0000004, 0xcce34953, 0xb86f6001, 0x2b689a3c, 0xd7c70269, 0xaf2fef48,
      0x618e3275, 0xc60c92e5, 0x2edc2b80, 0x182aaaaa, 0x40a935b1, 0x00539c49, 0xe4198337, 0x274062be,
      0xf7693570, 0x7d79c504, 0x92bba4fc, 0x2ee2e1f6, 0xcd8498f1, 0x895a44ee, 0x42eebfec, 0x000b4c1f};

    static constexpr storage<limbs_count> m = {0x5e4daffc, 0x1f9fd58c, 0x89c42a59, 0xd0ed6877, 0xd85a6d02, 0x6af2d488,
                                               0x6776b1a0, 0x3bbad0de, 0x582ef4f7, 0x976c3ca0, 0x0cc4060e, 0x0261508d};
    static constexpr storage<limbs_count> one = {0x00000001, 0x00000000, 0x00000000, 0x00000000,
                                                 0x00000000, 0x00000000, 0x00000000, 0x00000000,
                                                 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<limbs_count> zero = {0x00000000, 0x00000000, 0x00000000, 0x00000000,
                                                  0x00000000, 0x00000000, 0x00000000, 0x00000000,
                                                  0x00000000, 0x00000000, 0x00000000, 0x00000000};

    static constexpr storage<limbs_count> montgomery_r = {0xffffff68, 0x02cdffff, 0x7fffffb1, 0x51409f83,
                                                          0x8a7d3ff2, 0x9f7db3a9, 0x6e7c6305, 0x7b4e97b7,
                                                          0x803c84e8, 0x4cf495bf, 0xe2fdf49a, 0x008d6661};
    static constexpr storage<limbs_count> montgomery_r_inv = {0x451269e8, 0xef129093, 0xe65839f5, 0x6e20bbcd,
                                                              0xa5582c93, 0x852e3c88, 0xf7f2e657, 0xeeaaf41d,
                                                              0xa4c49351, 0xeb89746c, 0x436b0736, 0x014212fc};

    // i^2, the square of the imaginary unit for the extension field
    static constexpr uint32_t i_squared = 5;
    // true if i^2 is negative
    static constexpr bool i_squared_is_negative = true;
    // G1 and G2 generators
    static constexpr storage<limbs_count> g1_gen_x = {0xb21be9ef, 0xeab9b16e, 0xffcd394e, 0xd5481512,
                                                      0xbd37cb5c, 0x188282c8, 0xaa9d41bb, 0x85951e2c,
                                                      0xbf87ff54, 0xc8fc6225, 0xfe740a67, 0x008848de};
    static constexpr storage<limbs_count> g1_gen_y = {0x559c8ea6, 0xfd82de55, 0x34a9591a, 0xc2fe3d36,
                                                      0x4fb82305, 0x6d182ad4, 0xca3e52d9, 0xbd7fb348,
                                                      0x30afeec4, 0x1f674f5d, 0xc5102eff, 0x01914a69};
    static constexpr storage<limbs_count> g2_gen_x_re = {0x7c005196, 0x74e3e48f, 0xbb535402, 0x71889f52,
                                                         0x57db6b9b, 0x7ea501f5, 0x203e5031, 0xc565f071,
                                                         0xa3841d01, 0xc89630a2, 0x71c785fe, 0x018480be};
    static constexpr storage<limbs_count> g2_gen_x_im = {0x6ea16afe, 0xb26bfefa, 0xbff76fe6, 0x5cf89984,
                                                         0x0799c9de, 0xe7223ece, 0x6651cecb, 0x532777ee,
                                                         0xb1b140d5, 0x70dc5a51, 0xe7004031, 0x00ea6040};
    static constexpr storage<limbs_count> g2_gen_y_re = {0x09fd4ddf, 0xf0940944, 0x6d8c7c2e, 0xf2cf8888,
                                                         0xf832d204, 0xe458c282, 0x74b49a58, 0xde03ed72,
                                                         0xcbb2efb4, 0xd960736b, 0x5d446f7b, 0x00690d66};
    static constexpr storage<limbs_count> g2_gen_y_im = {0x85eb8f93, 0xd9a1cdd1, 0x5e52270b, 0x4279b83f,
                                                         0xcee304c2, 0x2463b01a, 0x3d591bf1, 0x61ef11ac,
                                                         0x151a70aa, 0x9e549da3, 0xd2835518, 0x00f8169f};
  };

  static constexpr storage<fq_config::limbs_count> weierstrass_b = {0x00000001, 0x00000000, 0x00000000, 0x00000000,
                                                                    0x00000000, 0x00000000, 0x00000000, 0x00000000,
                                                                    0x00000000, 0x00000000, 0x00000000, 0x00000000};
  static constexpr storage<fq_config::limbs_count> weierstrass_b_g2_re = {
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
  static constexpr storage<fq_config::limbs_count> weierstrass_b_g2_im = {
    0x9999999a, 0x1c9ed999, 0x1ccccccd, 0x0dd39e5c, 0x3c6bf800, 0x129207b6,
    0xcd5fd889, 0xdc7b4f91, 0x7460c589, 0x43bd0373, 0xdb0fd6f3, 0x010222f6};
} // namespace PARAMS_BLS12_377
