#pragma once
#include "../../utils/storage.cuh"

namespace PARAMS_BN254 {
  struct fp_config {
    static constexpr unsigned limbs_count = 8;
    static constexpr unsigned omegas_count = 28;
    static constexpr unsigned modulus_bit_count = 254;

    static constexpr storage<limbs_count> modulus = {0xf0000001, 0x43e1f593, 0x79b97091, 0x2833e848, 0x8181585d, 0xb85045b6, 0xe131a029, 0x30644e72};
    static constexpr storage<limbs_count> modulus_2 = {0xe0000002, 0x87c3eb27, 0xf372e122, 0x5067d090, 0x0302b0ba, 0x70a08b6d, 0xc2634053, 0x60c89ce5};
    static constexpr storage<limbs_count> modulus_4 = {0xc0000004, 0x0f87d64f, 0xe6e5c245, 0xa0cfa121, 0x06056174, 0xe14116da, 0x84c680a6, 0xc19139cb};
    static constexpr storage<2*limbs_count> modulus_wide = {0xf0000001, 0x43e1f593, 0x79b97091, 0x2833e848, 0x8181585d, 0xb85045b6, 0xe131a029, 0x30644e72, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<2*limbs_count> modulus_squared = {0xe0000001, 0x08c3eb27, 0xdcb34000, 0xc7f26223, 0x68c9bb7f, 0xffe9a62c, 0xe821ddb0, 0xa6ce1975, 0x47b62fe7, 0x2c77527b, 0xd379d3df, 0x85f73bb0, 0x0348d21c, 0x599a6f7c, 0x763cbf9c, 0x0925c4b8};
    static constexpr storage<2*limbs_count> modulus_squared_2 = {0xc0000002, 0x1187d64f, 0xb9668000, 0x8fe4c447, 0xd19376ff, 0xffd34c58, 0xd043bb61, 0x4d9c32eb, 0x8f6c5fcf, 0x58eea4f6, 0xa6f3a7be, 0x0bee7761, 0x0691a439, 0xb334def8, 0xec797f38, 0x124b8970};
    static constexpr storage<2*limbs_count> modulus_squared_4 = {0x80000004, 0x230fac9f, 0x72cd0000, 0x1fc9888f, 0xa326edff, 0xffa698b1, 0xa08776c3, 0x9b3865d7, 0x1ed8bf9e, 0xb1dd49ed, 0x4de74f7c, 0x17dceec3, 0x0d234872, 0x6669bdf0, 0xd8f2fe71, 0x249712e1};

    static constexpr storage<limbs_count> m = {0xbe1de925, 0x620703a6, 0x09e880ae, 0x71448520, 0x68073014, 0xab074a58, 0x623a04a7, 0x54a47462};
    static constexpr storage<limbs_count> one = {0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<limbs_count> zero = {0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<limbs_count> montgomery_r = {0x4ffffffb, 0xac96341c, 0x9f60cd29, 0x36fc7695,
                                                          0x7879462e, 0x666ea36f, 0x9a07df2f, 0xe0a77c1};
    static constexpr storage<limbs_count> montgomery_r_inv = {0x6db1194e, 0xdc5ba005, 0xe111ec87, 0x90ef5a9,
                                                              0xaeb85d5d, 0xc8260de4, 0x82c5551c, 0x15ebf951};

    static constexpr storage_array<omegas_count, limbs_count> omega = { {
              {0xf0000000, 0x43e1f593, 0x79b97091, 0x2833e848, 0x8181585d, 0xb85045b6, 0xe131a029, 0x30644e72},
              {0x8f703636, 0x23120470, 0xfd736bec, 0x5cea24f6, 0x3fd84104, 0x048b6e19, 0xe131a029, 0x30644e72},
              {0xc1bd5e80, 0x948dad4a, 0xf8170a0a, 0x52627366, 0x96afef36, 0xec9b9e2f, 0xc8c14f22, 0x2b337de1},
              {0xe306460b, 0xb11509c6, 0x174efb98, 0x996dfbe1, 0x94dd508c, 0x1c6e4f45, 0x16cbbf4e, 0x21082ca2},
              {0x3bb512d0, 0x3eed4c53, 0x838eeb1d, 0x9c18d51b, 0x47c0b2a9, 0x9678200d, 0x306b93d2, 0x09c532c6},
              {0xde70fdc7, 0x684cfa8e, 0x52d64bd2, 0xe18d1d24, 0x37c3aa6a, 0xf6036a40, 0x8629905e, 0x1c4c3a25},
              {0x942e6d6b, 0x8c9e954b, 0x0535c8d0, 0x3df9cff8, 0xaeec0dae, 0x49f7a010, 0x2d155c2b, 0x2822ef9d},
              {0x5a526c81, 0x6692cc1e, 0x5dd2336a, 0xd8675a9e, 0x0a13f2db, 0x820b96ff, 0x529be585, 0x1058a83d},
              {0xe4fc88fc, 0x73af7ff4, 0x1e9054a1, 0x165b6128, 0x9bc807ac, 0x5d2a3302, 0xd8c17355, 0x0dd30b9a},
              {0x09c4bb7d, 0xbd08d993, 0x0f1b1573, 0xb135ea33, 0xf2cbd2de, 0x19f77c5c, 0xd07c42ab, 0x2ad9021e},
              {0x4172705f, 0x060bc04a, 0x0f53557b, 0xfa6c01aa, 0x7d4a5694, 0x74db4b3f, 0xe75885d6, 0x14c60185},
              {0x1f2e6ee6, 0x251aa616, 0x73efee2a, 0x38aa8107, 0x087a4232, 0xa9953f60, 0xf1d35fda, 0x2f6122bb},
              {0x67f67ae1, 0x12b179af, 0x5881f9ed, 0x03bd0ed2, 0xf23d81aa, 0x35a1bb49, 0xc1599ff5, 0x10e3d295},
              {0xeaab3cac, 0x9119dbe6, 0x335d73a0, 0xd626d9ca, 0x9e9a0c07, 0x2aa21284, 0x9f40bf2b, 0x2337acd1},
              {0x6a8a942e, 0xf0acd0b9, 0xe4d44a65, 0xcb511871, 0x3120ce6f, 0x6530b94d, 0x383c8d80, 0x2b7ddfe4},
              {0x33584b29, 0xbabd5821, 0x89091c3a, 0xa5f5d8fb, 0x3f647643, 0x23e49ace, 0x5782fbe9, 0x09d2cc4b},
              {0x79c2c3ea, 0x8db819c1, 0xa7f266ef, 0xe7ea6b06, 0x27ed7706, 0x054e981a, 0x9cfa5b0f, 0x304cd1e7},
              {0x8ddbfebe, 0x26a9fcf8, 0x5216231b, 0xd60d06a0, 0x67945f6b, 0x79b2d392, 0x0414cb93, 0x0f60c8fe},
              {0x568fc082, 0x14cc0193, 0xe4b0883d, 0xb123f767, 0xa4077806, 0xcbb67d11, 0xaafac6ba, 0x0cf1526a},
              {0x82673378, 0x2f0e1e31, 0xda049d5b, 0x745e39fa, 0x2520e670, 0x856402b6, 0x1ff42de3, 0x2a14464f},
              {0x639659bb, 0x747b5c96, 0xf4442a52, 0xbdcaa463, 0x5d0258e1, 0x0828c728, 0xf3c2493d, 0x032750f8},
              {0x8326bede, 0x4dd65416, 0x7f16e91b, 0xffcec534, 0x923947c5, 0xa1b30fd7, 0xe6514e11, 0x18c95f1a},
              {0x5bc60863, 0x1c223be6, 0x9cbfd7c4, 0xa4adb926, 0x823128be, 0xba2008fe, 0x4b7b1a76, 0x1283ba6f},
              {0x36c0facb, 0x821df866, 0x78c050f2, 0x036f5ba9, 0x5066a50a, 0x6e47a607, 0x10b2b95a, 0x19514410},
              {0x303dd160, 0x3f94c217, 0x3acb9e00, 0x262b9af8, 0x7adaae39, 0xa8ed16c1, 0x97367c97, 0x0d94d639},
              {0x6cc7ec97, 0xc75090cc, 0xb9227b96, 0x24395c43, 0xaca3c0e5, 0xe29a9039, 0xdd64ef6c, 0x1dba8b5b},
              {0x8f948006, 0x998550aa, 0xa2f0e806, 0x08d6377c, 0x8d1604d4, 0x5258ffea, 0xd90e580c, 0x148e611d},
              {0x60c37c9c, 0xd34f1ed9, 0xd39329c8, 0x3215cf6d, 0x3dd31f74, 0x98865ea9, 0x166d18b7, 0x03ddb9f5}
    } };


    static constexpr storage_array<omegas_count, limbs_count> omega_inv = { {
              {0xf0000000, 0x43e1f593, 0x79b97091, 0x2833e848, 0x8181585d, 0xb85045b6, 0xe131a029, 0x30644e72},
              {0x608fc9cb, 0x20cff123, 0x7c4604a5, 0xcb49c351, 0x41a91758, 0xb3c4d79d, 0x00000000, 0x00000000},
              {0x07b95a9b, 0x8b11d9ab, 0x41671f56, 0x20710ead, 0x30f81dee, 0xfb3acaee, 0x9778465c, 0x130b1711},
              {0x373428de, 0xb85a71e6, 0xaeb0337e, 0x74954d30, 0x303402b7, 0x2bfc85eb, 0x409556c0, 0x02e40daf},
              {0xf210979d, 0x8c99980c, 0x34905b4d, 0xef8f3113, 0xdf25d8e7, 0x0aeaf3e7, 0x03bfbd79, 0x27247136},
              {0x79c29672, 0xcb138b88, 0x5c875ca2, 0x5030515c, 0x19d8b1e6, 0xb4f36941, 0x2e9062ef, 0x0a4cd180},
              {0xb2e4ae8b, 0x43ec8178, 0xe1331433, 0x1545b57e, 0x0cfa424b, 0x385354b2, 0x680760be, 0x1e3cef5e},
              {0x28aba10b, 0xe63b433f, 0x8eb5846a, 0x432c51f4, 0xb0e89d79, 0x9825f3c9, 0xdf501484, 0x1f4d7180},
              {0xd3bc4035, 0x4443eda5, 0x75ee9824, 0xe04e24d2, 0xf236b0d5, 0x87fb69ab, 0x8598b7c3, 0x096b9f8b},
              {0xa4e3b1e3, 0xb10b15ed, 0x8c9e4ae0, 0xdfed2bb9, 0x6c03ccdf, 0x2de8a8f4, 0xc03c0a5f, 0x0ae3c95f},
              {0x97d7161a, 0x882e7085, 0x3c3f1efc, 0x156b2157, 0x7929058c, 0x434a4a66, 0x273f1cb3, 0x2afd4e77},
              {0x0237d0c0, 0xb92790e0, 0x6bfc2f2c, 0x0fa885cb, 0x4bfba20a, 0x24f4e92b, 0x139def1b, 0x179c2392},
              {0xfc6e53e5, 0x07537b08, 0x9ae42809, 0x5d3afb3a, 0xaee9ac48, 0x08b6010a, 0x4bd08f2b, 0x09ff3853},
              {0x65b90d7d, 0xe7a58fdb, 0xac7d853e, 0x303c2fb2, 0x1489aec5, 0x1d13a09c, 0x1b2a29bd, 0x2f9c1d05},
              {0xa8d91624, 0x21e56f3c, 0xfddabaf3, 0x3d491e59, 0x10221a3e, 0x630a13c7, 0x74eaef5e, 0x1f67bc45},
              {0x0472c1f0, 0x88b47b74, 0xba762aba, 0x577b2bfd, 0x473d3dfb, 0x4e812826, 0x4f245613, 0x0cf312e8},
              {0x06fcb0fb, 0x7f8f019c, 0x78be3c3b, 0x4780db88, 0x263a131b, 0x023d6ab2, 0x872cdeff, 0x193586da},
              {0x6d3e2b76, 0xc6ab624d, 0x7384a41b, 0xb58d0091, 0xb8fbf541, 0x2bb4efe1, 0x21ab96da, 0x0e1165d2},
              {0x3ee230a9, 0x38b43720, 0x8faf563f, 0x3ba2a275, 0x990bf698, 0x227a9c15, 0x081c2aba, 0x20784546},
              {0xab442d5f, 0x5ae8abbd, 0xf0a733ea, 0xb2a3d31d, 0xa49947e0, 0x9eecbf4f, 0xbf832baf, 0x220db0d8},
              {0x3e38c2f8, 0x064a0cc1, 0xd02f202c, 0xeccf4c4f, 0xde7179be, 0xc3a20817, 0x40ec1915, 0x06288b9d},
              {0x4d1a3964, 0x7cd65b20, 0x15749337, 0xe199bd70, 0x5b324820, 0xb1685e87, 0xe34eb8c7, 0x134f571f},
              {0x94d4772b, 0x58de6857, 0xd9cb7d08, 0xc568bcab, 0x80cc9361, 0x99547749, 0x1cf3f8b5, 0x1589862c},
              {0x80b498d6, 0x90a4075c, 0x0408eb55, 0xf170cd94, 0xe76e4b66, 0x26f023d3, 0xe559ea58, 0x26501ebf},
              {0xa5a6c5c8, 0x84098183, 0x0cceb2b5, 0x12b0b5c5, 0x9c095568, 0x60467709, 0xecb5bfe8, 0x19277f31},
              {0x8f5c7241, 0x0e18521d, 0x21a3d802, 0xd4b68753, 0xc5ff0e40, 0xf82399e9, 0xf766b4ed, 0x20bab6e5},
              {0x16606cd7, 0x98bb4185, 0x9e38250f, 0x71ac6ab6, 0x7e7504b0, 0x56b30f05, 0x34081d19, 0x25254835},
              {0x414e6dba, 0x0ed3e50a, 0x9115aba7, 0xb22625f5, 0x80f34361, 0x1bbe5871, 0x4daabc26, 0x04812717}
    } };
    

    static constexpr storage_array<omegas_count, limbs_count> inv = { {
              {0xf8000001, 0xa1f0fac9, 0x3cdcb848, 0x9419f424, 0x40c0ac2e, 0xdc2822db, 0x7098d014, 0x18322739},
              {0xf4000001, 0xf2e9782e, 0x5b4b146c, 0xde26ee36, 0xe1210245, 0x4a3c3448, 0x28e5381f, 0x244b3ad6},
              {0x72000001, 0x1b65b6e1, 0x6a82427f, 0x832d6b3f, 0xb1512d51, 0x81463cff, 0x850b6c24, 0x2a57c4a4},
              {0xb1000001, 0x2fa3d63a, 0xf21dd988, 0x55b0a9c3, 0x196942d7, 0x1ccb415b, 0xb31e8627, 0x2d5e098b},
              {0x50800001, 0xb9c2e5e7, 0x35eba50c, 0x3ef24906, 0xcd754d9a, 0x6a8dc388, 0x4a281328, 0x2ee12bff},
              {0xa0400001, 0xfed26dbd, 0x57d28ace, 0xb39318a7, 0xa77b52fb, 0x116f049f, 0x15acd9a9, 0x2fa2bd39},
              {0xc8200001, 0x215a31a8, 0xe8c5fdb0, 0x6de38077, 0x147e55ac, 0x64dfa52b, 0xfb6f3ce9, 0x300385d5},
              {0x5c100001, 0xb29e139e, 0x313fb720, 0xcb0bb460, 0xcaffd704, 0x8e97f570, 0x6e506e89, 0x3033ea24},
              {0x26080001, 0xfb400499, 0x557c93d8, 0xf99fce54, 0xa64097b0, 0xa3741d93, 0xa7c10759, 0x304c1c4b},
              {0x8b040001, 0x1f90fd16, 0x679b0235, 0x10e9db4e, 0x13e0f807, 0xade231a5, 0x447953c1, 0x3058355f},
              {0x3d820001, 0x31b97955, 0x70aa3963, 0x1c8ee1cb, 0xcab12832, 0xb3193bad, 0x12d579f5, 0x305e41e9},
              {0x96c10001, 0x3acdb774, 0xf531d4fa, 0xa2616509, 0x26194047, 0xb5b4c0b2, 0xfa038d0f, 0x3061482d},
              {0x43608001, 0xbf57d684, 0x3775a2c5, 0x654aa6a9, 0x53cd4c52, 0xb7028334, 0x6d9a969c, 0x3062cb50},
              {0x19b04001, 0x819ce60c, 0xd89789ab, 0xc6bf4778, 0x6aa75257, 0x37a96475, 0xa7661b63, 0x30638ce1},
              {0x04d82001, 0x62bf6dd0, 0xa9287d1e, 0x777997e0, 0xf614555a, 0x77fcd515, 0x444bddc6, 0x3063edaa},
              {0xfa6c1001, 0xd350b1b1, 0x9170f6d7, 0xcfd6c014, 0x3bcad6db, 0x18268d66, 0x92bebef8, 0x30641e0e},
              {0xf5360801, 0x8b9953a2, 0x859533b4, 0x7c05542e, 0x5ea6179c, 0xe83b698e, 0xb9f82f90, 0x30643640},
              {0x729b0401, 0xe7bda49b, 0x7fa75222, 0xd21c9e3b, 0x7013b7fc, 0x5045d7a2, 0xcd94e7dd, 0x30644259},
              {0xb14d8201, 0x15cfcd17, 0xfcb0615a, 0xfd284341, 0x78ca882c, 0x844b0eac, 0x57634403, 0x30644866},
              {0xd0a6c101, 0xacd8e155, 0x3b34e8f5, 0x12ae15c5, 0x7d25f045, 0x9e4daa31, 0x9c4a7216, 0x30644b6c},
              {0xe0536081, 0x785d6b74, 0xda772cc3, 0x1d70ff06, 0xff53a451, 0x2b4ef7f3, 0xbebe0920, 0x30644cef},
              {0x6829b041, 0x5e1fb084, 0xaa184eaa, 0x22d273a7, 0x406a7e57, 0xf1cf9ed5, 0x4ff7d4a4, 0x30644db1},
              {0x2c14d821, 0xd100d30c, 0x11e8df9d, 0x25832df8, 0xe0f5eb5a, 0x550ff245, 0x1894ba67, 0x30644e12},
              {0x0e0a6c11, 0x8a716450, 0x45d12817, 0xa6db8b20, 0x313ba1db, 0x86b01bfe, 0x7ce32d48, 0x30644e42},
              {0xff053609, 0x6729acf1, 0x5fc54c54, 0x6787b9b4, 0x595e7d1c, 0x1f8030da, 0xaf0a66b9, 0x30644e5a},
              {0xf7829b05, 0xd585d142, 0x6cbf5e72, 0xc7ddd0fe, 0x6d6feabc, 0x6be83b48, 0xc81e0371, 0x30644e66},
              {0x73c14d83, 0x0cb3e36b, 0x733c6782, 0xf808dca3, 0x7778a18c, 0x921c407f, 0xd4a7d1cd, 0x30644e6c},
              {0xb1e0a6c2, 0xa84aec7f, 0xf67aec09, 0x101e6275, 0xfc7cfcf5, 0xa536431a, 0xdaecb8fb, 0x30644e6f}
    } }; 
  };

  struct fq_config {
    static constexpr unsigned limbs_count = 8;
    static constexpr unsigned modulus_bit_count = 254;
    static constexpr storage<limbs_count> modulus = {0xd87cfd47, 0x3c208c16, 0x6871ca8d, 0x97816a91, 0x8181585d, 0xb85045b6, 0xe131a029, 0x30644e72};
    static constexpr storage<limbs_count> modulus_2 = {0xb0f9fa8e, 0x7841182d, 0xd0e3951a, 0x2f02d522, 0x0302b0bb, 0x70a08b6d, 0xc2634053, 0x60c89ce5};
    static constexpr storage<limbs_count> modulus_4 = {0x61f3f51c, 0xf082305b, 0xa1c72a34, 0x5e05aa45, 0x06056176, 0xe14116da, 0x84c680a6, 0xc19139cb};
    static constexpr storage<2*limbs_count> modulus_wide = {0xd87cfd47, 0x3c208c16, 0x6871ca8d, 0x97816a91, 0x8181585d, 0xb85045b6, 0xe131a029, 0x30644e72, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<2*limbs_count> modulus_squared = {0x275d69b1, 0x3b5458a2, 0x09eac101, 0xa602072d, 0x6d96cadc, 0x4a50189c, 0x7a1242c8, 0x04689e95, 0x34c6b38d, 0x26edfa5c, 0x16375606, 0xb00b8551, 0x0348d21c, 0x599a6f7c, 0x763cbf9c, 0x0925c4b8};
    static constexpr storage<2*limbs_count> modulus_squared_2 = {0x4ebad362, 0x76a8b144, 0x13d58202, 0x4c040e5a, 0xdb2d95b9, 0x94a03138, 0xf4248590, 0x08d13d2a, 0x698d671a, 0x4ddbf4b8, 0x2c6eac0c, 0x60170aa2, 0x0691a439, 0xb334def8, 0xec797f38, 0x124b8970};
    static constexpr storage<2*limbs_count> modulus_squared_4 = {0x9d75a6c4, 0xed516288, 0x27ab0404, 0x98081cb4, 0xb65b2b72, 0x29406271, 0xe8490b21, 0x11a27a55, 0xd31ace34, 0x9bb7e970, 0x58dd5818, 0xc02e1544, 0x0d234872, 0x6669bdf0, 0xd8f2fe71, 0x249712e1};
    static constexpr storage<limbs_count> m = {0x19bf90e5, 0x6f3aed8a, 0x67cd4c08, 0xae965e17, 0x68073013, 0xab074a58, 0x623a04a7, 0x54a47462};
    static constexpr storage<limbs_count> one = {0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<limbs_count> zero = {0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<limbs_count> montgomery_r = {0x4ffffffb, 0xac96341c, 0x9f60cd29, 0x36fc7695,
                                                          0x7879462e, 0x666ea36f, 0x9a07df2f, 0xe0a77c1};
    static constexpr storage<limbs_count> montgomery_r_inv = {0x6db1194e, 0xdc5ba005, 0xe111ec87, 0x90ef5a9,
                                                              0xaeb85d5d, 0xc8260de4, 0x82c5551c, 0x15ebf951};
    
    // i^2, the square of the imaginary unit for the extension field
    static constexpr uint32_t i_squared = 1;
    // true if i^2 is negative
    static constexpr bool i_squared_is_negative = true;
    // G1 and G2 generators 
    static constexpr storage<limbs_count> g1_gen_x = {0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<limbs_count> g1_gen_y = {0x00000002, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<limbs_count> g2_gen_x_re = {0xd992f6ed, 0x46debd5c, 0xf75edadd, 0x674322d4, 0x5e5c4479, 0x426a0066, 0x121f1e76, 0x1800deef};
    static constexpr storage<limbs_count> g2_gen_x_im = {0xaef312c2, 0x97e485b7, 0x35a9e712, 0xf1aa4933, 0x31fb5d25, 0x7260bfb7, 0x920d483a, 0x198e9393};
    static constexpr storage<limbs_count> g2_gen_y_re = {0x66fa7daa, 0x4ce6cc01, 0x0c43d37b, 0xe3d1e769, 0x8dcb408f, 0x4aab7180, 0xdb8c6deb, 0x12c85ea5};
    static constexpr storage<limbs_count> g2_gen_y_im = {0xd122975b, 0x55acdadc, 0x70b38ef3, 0xbc4b3133, 0x690c3395, 0xec9e99ad, 0x585ff075, 0x090689d0};
  };

  static constexpr storage<fq_config::limbs_count> weierstrass_b = {0x00000003, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
  static constexpr storage<fq_config::limbs_count> weierstrass_b_g2_re = {0x24a138e5, 0x3267e6dc, 0x59dbefa3, 0xb5b4c5e5, 0x1be06ac3, 0x81be1899, 0xceb8aaae, 0x2b149d40};
  static constexpr storage<fq_config::limbs_count> weierstrass_b_g2_im = {0x85c315d2, 0xe4a2bd06, 0xe52d1852, 0xa74fa084, 0xeed8fdf4, 0xcd2cafad, 0x3af0fed4, 0x009713b0};
}
